---
import { ExploreTheCommunity } from "@/components/ExploreTheCommunity";
import RootLayout from "@/layouts/RootLayout.astro";
import type { CollectionEntry } from "astro:content";
import ImageBackgroundHero from "@/components/ImageBackgroundHero/index.astro";
import { EventNav } from "@/components/EventNav";
import {
  getEventNavItems,
  shouldShowCFPButton,
  shouldShowTicketsButton,
} from "@/lib/events";
import EventWarningBanner from "@/components/EventWarningBanner/index.astro";
import Footer from "@/components/Footer/index.astro";
import dayjs from "dayjs";
import SEO from "@/components/SEO/index.astro";
import { match } from "ts-pattern";
import { motion } from "motion/react";

interface Props {
  event: CollectionEntry<"events">;
}

const { event } = Astro.props;
const navItems = await getEventNavItems(event.id);

const url = new URL(Astro.url.pathname, Astro.site);
const title = `${event.data.city}, ${event.data.country}, ${dayjs(event.data.date).format("YYYY")}, ${match(
  event.data.type,
)
  .with("event", () => "Full Day Event")
  .with("meetup", () => "Community Meetup")
  .exhaustive()}`;
---

<RootLayout>
  <SEO
    slot="seo"
    title={title}
    description={event.data.excerpt ?? ""}
    url={url}
  />
  {
    !!event?.data.image?.src && (
      <motion.div
        client:load
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 1 }}
      >
        <ImageBackgroundHero
          src={event.data.image.src}
          alt={event.data.image.alt}
        />
      </motion.div>
    )
  }
  <div class="absolute inset-0 p-2">
    <ExploreTheCommunity
      eventCity={event.data.city}
      eventCountry={event.data.country}
      eventDate={event.data.date}
      logoUrl={`/events/${event.id}`}
    />
  </div>
  <EventNav
    eventName={event.data.name}
    eventId={event.id}
    eventMetadata={{
      date: event.data.date,
      status: event.data.status,
      cfp: event.data.cfp,
      tickets: event.data.tickets,
    }}
    items={navItems}
    shouldShowCFPButton={shouldShowCFPButton(event)}
    shouldShowTicketsButton={shouldShowTicketsButton(event)}
    client:load
  />
  <div class="flex flex-1 flex-col">
    <slot />
  </div>
  <Footer />
  <EventWarningBanner event={event} />
</RootLayout>
