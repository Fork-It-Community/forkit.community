---
import { ForKidsEventNav } from "@/components/ForKidsEventNav";
import ExploreTheCommunity from "@/components/ExploreTheCommunity/index.astro";
import Footer from "@/components/Footer/index.astro";
import ImageBackgroundHero from "@/components/ImageBackgroundHero/index.astro";
import SEO from "@/components/SEO/index.astro";
import RootLayout from "@/layouts/RootLayout.astro";
import {
  getForKidsEventNavItems,
  type ForKidsEventComputed,
} from "@/lib/forKidsEvents";
import { motion } from "motion/react";
import { lunalink } from "@bearstudio/lunalink";
import { ROUTES } from "@/routes.gen";
import forKidsEventImage from "@/assets/images/for-kids-event.jpg";

interface Props {
  forKidsEvent: ForKidsEventComputed;
  ogImage: URL;
}

const { forKidsEvent, ogImage } = Astro.props;
const navItems = await getForKidsEventNavItems(forKidsEvent.id);

const url = new URL(Astro.url.pathname, Astro.site);
const title = `${forKidsEvent.data._computed.name}, For Kids`;
---

<RootLayout>
  <slot name="ld+json" slot="ld+json" />
  <SEO
    slot="seo"
    title={title}
    description={forKidsEvent.data.excerpt ?? ""}
    url={url}
    image={ogImage.toString()}
  />

  <motion.div
    client:load
    initial={{ opacity: 0 }}
    animate={{ opacity: 1 }}
    transition={{ duration: 1 }}
  >
    <ImageBackgroundHero
      src={forKidsEventImage}
      alt="Kids during a Fork it for Kids event"
    />
  </motion.div>

  <div class="absolute inset-0 p-2">
    <ExploreTheCommunity
      eventCity={forKidsEvent.data._computed.city?.data.name ?? ""}
      eventCountry={forKidsEvent.data._computed.country?.data.name ?? ""}
      eventDate={forKidsEvent.data.date}
      logoUrl={lunalink(ROUTES.fr.events["for-kids"][":id"].__path, {
        id: forKidsEvent.id,
      })}
      pageUrl={new URL(Astro.url.pathname, Astro.site).toString()}
      type="for-kids"
    />
  </div>
  <ForKidsEventNav
    forKidsEventId={forKidsEvent.id}
    forKidsEventName={forKidsEvent.data._computed.name}
    forKidsEventTickets={forKidsEvent.data.tickets}
    items={navItems}
    client:load
  />
  <div class="flex flex-1 flex-col">
    <slot />
  </div>
  <Footer />
</RootLayout>
