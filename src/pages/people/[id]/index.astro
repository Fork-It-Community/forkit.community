---
import MainLayout from "@/layouts/MainLayout.astro";
import { getPersonEvents } from "@/lib/events";
import { getPersonArticles } from "@/lib/news";
import { getPersonEpisodes } from "@/lib/podcasts";
import type { GetStaticPaths } from "astro";
import { SEO } from "astro-seo";
import { getCollection } from "astro:content";
import defaultImage from "@/assets/images/events.jpeg";
import defaultPerson from "@/assets/images/people-placeholder.jpeg";
import ImageBackgroundHero from "@/components/ImageBackgroundHero/index.astro";
import { Image } from "astro:assets";
import { getAppearances } from "@/lib/utils";
import { match } from "ts-pattern";
import { MdEvent, MdNewspaper, MdPodcasts } from "react-icons/md";
import { render } from "astro:content";
import { SOCIALS_TYPE_MAP } from "@/content/socials";
import Prose from "@/components/Prose/index.astro";

export const getStaticPaths = (async () => {
  const people = await getCollection("people");

  return Promise.all(
    people.map(async (person) => ({
      params: { id: person.id },
      props: {
        person: person,
        events: await getPersonEvents(person),
        episodes: await getPersonEpisodes(person),
        articles: await getPersonArticles(person),
        appearances: await getAppearances(person, Infinity),
      },
    })),
  );
}) satisfies GetStaticPaths;

const { person, appearances } = Astro.props;
const { Content } = await render(person);
---

<MainLayout>
  <ImageBackgroundHero
    src={defaultImage}
    alt=""
    className="h-[80vh] opacity-80"
  />

  <SEO slot="seo" title="Community Members" />
  <div class="m-auto mt-16 max-w-5xl">
    <div class="flex flex-row gap-8">
      <div class="flex w-72 flex-col gap-4">
        <div class="aspect-square size-56 flex-none overflow-hidden rounded-lg">
          <Image
            src={person.data.avatar ?? defaultPerson}
            alt={`${person.data.name} profile picture`}
            width={300}
            height={300}
          />
        </div>
        <p class="text-xl font-medium">
          {person.data.name}
        </p>
        <Prose class="text-sm"><Content /></Prose>
        {
          !!person.data.socials && (
            <ul class="flex flex-row gap-2">
              {person.data.socials.map((social) => {
                const Icon = SOCIALS_TYPE_MAP[social.type];

                return (
                  <li>
                    <a
                      href={social.href}
                      class="opacity-60 transition hover:text-primary hover:opacity-100"
                      target="_blank"
                    >
                      <span class="sr-only">{social.type}</span>
                      <Icon />
                    </a>
                  </li>
                );
              })}
            </ul>
          )
        }
      </div>
      <section class="flex w-full flex-col gap-4">
        <h2 class="font-heading text-2xl">Community Contributions</h2>
        <ul class="flex flex-col gap-2">
          {
            appearances.map((appearance) => {
              return match(appearance)
                .with({ collection: "events" }, (a) => {
                  const isOrganizer = !!a.data.organizers?.some(
                    (item) => item.id === person.id,
                  );
                  const isVolunteer = !!a.data.volunteers?.some(
                    (item) => item.id === person.id,
                  );
                  const isSpeaker = !!a.data.speakers?.some(
                    (item) => item.id === person.id,
                  );

                  return (
                    <li class="bg-white/5">
                      <a
                        href={`/events/${appearance.id}`}
                        class="group flex gap-2 p-4 text-sm"
                      >
                        <MdEvent className="flex-none opacity-40 mt-0.5 transition group-hover:opacity-100" />
                        <span class="opacity-80 transition group-hover:text-primary group-hover:opacity-100">
                          {a.data.name}
                          <span class="flex text-2xs uppercase text-white opacity-80 transition group-hover:opacity-100">
                            {[
                              isOrganizer && "Organizer",
                              isSpeaker && "Speaker",
                              isVolunteer && "Volunteer",
                            ]
                              .filter(Boolean)
                              .join(", ")}
                          </span>
                        </span>
                      </a>
                    </li>
                  );
                })
                .with({ collection: "episodes" }, (a) => {
                  const isHost = !!a.data.hosts?.some(
                    (item) => item.id === person.id,
                  );
                  const isGuest = !!a.data.guests?.some(
                    (item) => item.id === person.id,
                  );
                  return (
                    <li class="bg-white/5">
                      <a
                        href={`/podcasts/${appearance.id}`}
                        class="group flex gap-2 p-4 text-sm"
                      >
                        <MdPodcasts className="flex-none opacity-40 mt-0.5 transition group-hover:opacity-100" />
                        <span class="opacity-80 transition group-hover:text-primary group-hover:opacity-100">
                          {a.data.title}
                          <span class="flex text-2xs uppercase text-white opacity-80 transition group-hover:opacity-100">
                            {[isHost && "Host", isGuest && "Guest"]
                              .filter(Boolean)
                              .join(", ")}
                          </span>
                        </span>
                      </a>
                    </li>
                  );
                })
                .with({ collection: "news" }, (a) => {
                  return (
                    <li>
                      <a
                        href={`/news/article/${appearance.id}`}
                        class="group flex gap-2 text-sm"
                      >
                        <MdNewspaper className="flex-none opacity-40 mt-0.5 transition group-hover:opacity-100" />
                        <span class="opacity-80 transition group-hover:text-primary group-hover:opacity-100">
                          {a.data.title}
                          <span class="flex text-2xs uppercase text-white opacity-80 transition group-hover:opacity-100">
                            Author
                          </span>
                        </span>
                      </a>
                    </li>
                  );
                })
                .exhaustive();
            })
          }
        </ul>
      </section>
    </div>
  </div>
</MainLayout>
