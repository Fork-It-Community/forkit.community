---
import { TimelineItem } from "@/components/timeline";
import { TimelineHeader } from "@/components/timeline";
import { TimelineIcon } from "@/components/timeline";
import { TimelineContent } from "@/components/timeline";
import { TimelineConnector } from "@/components/timeline";
import { TimelineTitle } from "@/components/timeline";
import { Timeline } from "@/components/timeline";
import { formatTime } from "@/lib/utils";
import type { CollectionEntry } from "astro:content";

interface Props {
  event: CollectionEntry<"events">["data"];
}
const { event } = Astro.props;
---

<div>
  <Timeline>
    {
      event.schedule &&
        event.schedule.map((item, index) => (
          <TimelineItem key={index}>
            <TimelineConnector isLast={index === event.schedule.length - 1} />
            <TimelineHeader>
              <TimelineIcon />
              <TimelineTitle className="text-white">
                {item.startTime && (
                  <div class="flex gap-2">
                    <div />
                    <time datetime={item.startTime?.toISOString()}>
                      {formatTime(item.startTime)}
                    </time>
                    <p class="text-neutral-400">{item.duration} minutes</p>
                  </div>
                )}
              </TimelineTitle>
            </TimelineHeader>
            <TimelineContent />
          </TimelineItem>
        ))
    }
  </Timeline>
</div>
