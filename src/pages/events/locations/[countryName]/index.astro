---
import TiltedCard from "@/components/TiltedCard";
import MainLayout from "@/layouts/MainLayout.astro";

import MainPageTitle from "@/components/MainPageTitle/index.astro";
import SEO from "@/components/SEO/index.astro";
import bgImage from "@/assets/images/events.jpeg";
import { getEventsByCountry } from "@/lib/events";
import EventCard from "@/components/EventCard/index.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const countries = await getCollection("countries");

  return countries.map((country) => ({
    params: { countryName: country.id },
    props: { country },
  }));
}

const { country } = Astro.props;

const eventsInCountry = await getEventsByCountry(country.id);
---

<MainLayout>
  <SEO
    slot="seo"
    title="Events"
    description="All the Fork it! events, from meetups to full day events, come take a look at what is happening near you."
  />
  <MainPageTitle
    title="Locations"
    subtitle=`All the Fork it! tech events in ${country.data.name}`
    `
    imageSrc={bgImage}
  />
  <div class="flex flex-col gap-24 pb-40">
    <div class="flex justify-between">
      {
        !!eventsInCountry.length && (
          <div class="mx-auto w-full max-w-screen-sm px-4">
            <div class="flex flex-col gap-2">
              <h2 class="font-heading text-sm font-medium uppercase tracking-widest opacity-60">
                The events of {country.data.name}
              </h2>
              <div class="flex flex-col gap-3">
                {eventsInCountry.map((event) => (
                  <TiltedCard client:visible scaleOnHover={1}>
                    <EventCard event={event} />
                  </TiltedCard>
                ))}
              </div>
            </div>
          </div>
        )
      }
    </div>
    <div class="flex justify-between">
      <div class="mx-auto w-full max-w-screen-sm px-4">
        <div class="flex flex-col gap-2">
          <h2
            class="font-heading text-sm font-medium uppercase tracking-widest opacity-60"
          >
            View events by city in {country.data.name}
          </h2>
          <div class="flex flex-col gap-3">
            <!-- {
              keys.map(
                (k) =>
                  k === country.data.name &&
                  Array.from(locations.get(k)!).map((city) => (
                    <TiltedCard client:visible scaleOnHover={1}>
                      <a href={`${country.data.name}/${city}`}>{city}</a>
                    </TiltedCard>
                  )),
              )
            } -->
          </div>
        </div>
      </div>
    </div>
  </div>
</MainLayout>
