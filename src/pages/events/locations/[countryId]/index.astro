---
import MainLayout from "@/layouts/MainLayout.astro";

import ImageBackgroundHero from "@/components/ImageBackgroundHero/index.astro";
import SEO from "@/components/SEO/index.astro";
import { getEventsByCountry, without } from "@/lib/events";
import EventsList from "@/components/EventsList/index.astro";
import { getCollection } from "astro:content";
import { getEntry } from "astro:content";
import { BackButton } from "@/components/BackButton";
import { lunalink } from "@bearstudio/lunalink";
import { ROUTES } from "@/routes.gen";
import dayjs from "dayjs";
import OrganizersList from "@/components/OrganizersList/index.astro";
import { getPeopleFromReference } from "@/lib/people";

export async function getStaticPaths() {
  const countries = await getCollection("countries");
  return countries.map((country) => ({
    params: { countryId: country.id },
  }));
}

const { countryId } = Astro.params;

const country = await getEntry("countries", countryId);

if (!country) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const allCities = await getCollection(
  "cities",
  (city) => city.data.country.id === countryId,
);
const eventsInCountry = without(await getEventsByCountry(countryId), "draft");

const citiesLastEvent = allCities.map((city) => {
  const lastEvent = eventsInCountry.find(
    (event) => event.data._computed.city?.id === city.id,
  );

  return {
    ...city,
    lastDate: dayjs(lastEvent?.data.date),
  };
});

const cities = citiesLastEvent.sort((a, b) => b.lastDate.diff(a.lastDate));

const ogImage = new URL(
  Astro.url.pathname + "/assets/og-image.jpg",
  Astro.site,
);

const organizers = await getPeopleFromReference(country.data.organizers ?? []);
---

<MainLayout>
  <SEO
    slot="seo"
    title={`${country.data.name} Events`}
    description={country.data.description}
    image={ogImage.toString()}
  />
  <ImageBackgroundHero
    src={country.data.cover.media}
    alt={country.data.cover.alt}
  />

  <div class="mx-auto w-full max-w-screen-lg px-4 py-4">
    <BackButton
      href={lunalink(ROUTES.events.__path, {})}
      client:load
      contextLabel="Fork It! Events"
    />
    <div
      class="flex w-full flex-col justify-between gap-8 py-12 md:min-h-[40svh] md:flex-row"
    >
      <div class="flex flex-1 flex-col gap-4">
        <div class="flex w-full flex-col gap-2">
          <h1
            class="w-full text-balance text-left font-heading text-4xl font-medium uppercase tracking-wider md:text-5xl"
          >
            {country.data.name}
          </h1>
          <h2
            class="w-full text-balance text-left text-base tracking-widest md:text-lg"
          >
            All the Fork it! tech events in {country.data.name}
          </h2>
        </div>
        {
          !!country.data.description && (
            <p class="max-w-[60ch] text-sm tracking-wide [text-shadow:0_2px_30px_rgba(0,0,0,0.4)]">
              {country.data.description}
            </p>
          )
        }
      </div>
      <OrganizersList organizers={organizers} />
    </div>
  </div>

  <div class="flex flex-col gap-16 pb-40">
    <div
      class="mx-auto flex w-full max-w-screen-lg flex-col gap-16 px-4 md:flex-row-reverse"
    >
      <div class="flex w-full flex-1 flex-col gap-4">
        <h2
          class="font-heading text-sm font-medium uppercase tracking-widest opacity-60"
        >
          Events by City
        </h2>
        <div class="flex flex-col">
          {
            cities.map((city) => (
              <a
                href={lunalink(
                  ROUTES["events"].locations[":countryId"][":cityId"].__path,
                  {
                    countryId: country.id,
                    cityId: city.id,
                  },
                )}
                class="border-b border-white/10 px-5 py-3 transition duration-500 first:border-t hover:bg-white/5"
              >
                {city.data.name}
              </a>
            ))
          }
        </div>
      </div>
      <EventsList
        events={eventsInCountry}
        title={`Events in ${country.data.name}`}
        class="flex-[2]"
      />
    </div>
  </div>
</MainLayout>
