---
import Sponsors from "@/components/Sponsors/index.astro";
import { Logo } from "@/components/Logo";
import { EventCTA } from "@/components/EventCTA";
import { buttonVariants } from "@/components/ui/button";
import FeedbackCTA from "@/components/FeedbackCTA/index.astro";
import EventLayout from "@/layouts/EventLayout.astro";
import Schedule from "@/components/Schedule/index.astro";
import People from "@/components/People/index.astro";
import JoinTheCommunity from "@/components/JoinTheCommunity/index.astro";
import Prose from "@/components/Prose/index.astro";
import {
  getEventNavItems,
  getEventsCollection,
  getEventSubPagesCollection,
  getEventCtaTypes,
  shouldShowCFP,
  getEventDisplayDate,
  shouldShowProspectus,
  getEventDisplayType,
} from "@/lib/events";
import { cn } from "@/lib/utils-client";
import { Image } from "astro:assets";
import { getEntries, render } from "astro:content";
import {
  MdArrowForward,
  MdLocationPin,
  MdEvent,
  MdArrowOutward,
} from "react-icons/md";
import { motion } from "motion/react";
import { Schema } from "astro-seo-schema";
import type { Place } from "schema-dts";
import PartnersBlock from "@/components/PartnersBlock/index.astro";
import { FAQ } from "@/components/Faq";
import { EventMessage } from "@/components/EventMessage";
import dayjs from "dayjs";

export async function getStaticPaths() {
  const events = await getEventsCollection();

  return Promise.all(
    events.map(async (event) => ({
      params: { id: event.id },
      props: {
        event,
        subPages: await getEventSubPagesCollection(event),
        speakers: await getEntries(event.data.speakers ?? []),
        coOrganizers: await getEntries(event.data.coOrganizers ?? []),
        sponsors: await getEntries(
          (event.data.sponsors ?? []).map((s) => s.slug),
        ),
        partners: await getEntries(event.data.partners ?? []),
      },
    })),
  );
}

const {
  event,
  speakers,
  coOrganizers: _coOrganizers,
  sponsors,
  partners,
} = Astro.props;
const coOrganizers = _coOrganizers.filter((p) => !!p);
const navItems = await getEventNavItems(event.id);
const { Content } = await render(event);

const location: Place | undefined = event.data.location
  ? {
      "@type": "Place",
      address: event.data.location.address,
      name: event.data.location.name ?? "",
    }
  : undefined;
const ogImage = new URL(
  Astro.url.pathname + "/assets/og-image.jpg",
  Astro.site,
);

const ctaTypes = getEventCtaTypes(event);
---

<EventLayout event={event} ogImage={ogImage}>
  <Schema
    slot="ld+json"
    item={{
      "@context": "https://schema.org",
      "@type": "Event",
      name: `${
        event.data.date
          ? dayjs(event.data.date).format("dddd, MMMM D, YYYY") + " "
          : ""
      }${event.data.name}`,
      startDate: event.data.date?.toISOString(),
      endDate: event.data.date?.toISOString(),
      description: event.data.excerpt ?? "",
      offers: (event.data.tickets?.offers ?? []).map((offer) => ({
        "@type": "Offer",
        price: offer.price,
        priceCurrency: offer.priceCurrency,
        url: event.data.tickets?.href ?? "",
        availability: offer.availability,
        validFrom: offer.validFrom.toISOString(),
      })),
      eventStatus: `https://schema.org/${event.data.eventStatus}`,
      image: event.data.image?.media.src ?? "",
      organizer: {
        "@type": "Organization",
        name: "Fork it! Community",
        url: "https://www.forkit.community",
      },
      eventAttendanceMode: event.data.attendanceMode,
      performer: (speakers ?? []).map((speaker) => ({
        "@type": "Person",
        name: speaker.data.name,
      })),
      ...(location && { location }),
    }}
  />
  <div
    class="relative flex h-[100svh] min-h-[600px] flex-col items-center justify-center"
  >
    <motion.div
      client:load
      initial={{ opacity: 0, y: -10 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ type: "spring" }}
      className="relative flex flex-1 flex-col items-center justify-center gap-8 p-4 md:gap-12"
    >
      <div class="flex flex-col items-center justify-center gap-4">
        <Logo className="w-32 md:w-48" />
        <h1
          class="flex flex-col gap-1 text-balance text-center font-heading md:gap-2"
        >
          <span class="text-3xl font-medium md:text-6xl">
            {getEventDisplayDate(event)}
          </span>
          <span class="text-xl text-primary md:text-4xl">
            {event.data.city}, {event.data.country}
          </span>

          <span
            class="p-2 text-xs uppercase tracking-widest opacity-60 md:text-sm"
          >
            {getEventDisplayType(event.data.type)}
          </span>
        </h1>
      </div>

      <div class="flex flex-wrap items-center justify-center gap-4">
        <EventCTA
          event={event}
          buttonType={ctaTypes.primary}
          variant="default"
        />
        <EventCTA
          event={event}
          buttonType={ctaTypes.secondary}
          variant="secondary"
        />
        <EventCTA
          event={event}
          buttonType={ctaTypes.tertiary}
          variant="secondary"
        />
      </div>
      {
        !!coOrganizers.length && (
          <div class="flex flex-col items-center justify-center">
            <div class="relative size-8 translate-y-1/2 opacity-20">
              <div class="h-[1px] w-full rotate-45 bg-white" />
              <div class="h-[1px] w-full -rotate-45 bg-white" />
            </div>
            <div class="flex w-full flex-wrap items-center justify-center gap-x-4">
              {coOrganizers.map((coOrganizer) => (
                <a href={coOrganizer.data.href}>
                  <Image
                    class={cn(
                      "size-24 md:size-28",
                      coOrganizers.length > 2 && "size-16 md:size-24",
                    )}
                    src={coOrganizer.data.logos.noBgSquare}
                    alt={coOrganizer.data.name}
                  />
                </a>
              ))}
            </div>
          </div>
        )
      }
    </motion.div>

    <motion.div
      client:load
      initial={{ opacity: 0, y: -5 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ type: "spring", delay: 0.2 }}
      className="absolute bottom-0 left-0 right-0 flex flex-col items-center justify-center gap-2 px-6 py-8 md:py-16"
    >
      <p class="text-xs uppercase tracking-widest opacity-40">Quick Access</p>
      <nav
        class="flex flex-wrap items-center justify-center gap-x-1 xs:gap-x-2 md:gap-x-3"
      >
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class="flex p-2 text-sm underline decoration-foreground/40 underline-offset-4 opacity-60 hover:text-primary hover:decoration-current hover:opacity-100 md:text-base"
            >
              {item.label}
            </a>
          ))
        }
      </nav>
    </motion.div>
  </div>
  {
    !!sponsors.length && (
      <div class="hide-scrollbar overflow-auto">
        <div class="mx-auto flex w-fit items-center gap-6 px-8 py-8">
          {sponsors.map((sponsor) => (
            <a
              href={sponsor.data.href}
              class="opacity-60 brightness-200 grayscale transition duration-300 hover:opacity-100 hover:brightness-100 hover:grayscale-0"
              title={sponsor.data.name}
            >
              <Image
                class="w-24 max-w-none flex-none"
                src={sponsor.data.logos.noBg}
                alt={sponsor.data.name}
                width={192}
                height={116}
              />
            </a>
          ))}
        </div>
      </div>
    )
  }

  <!-- After event  -->
  {
    !!event.data.afterEventContent && (
      <div
        id="after-event"
        class="relative flex w-full scroll-m-12 flex-col gap-6 px-6 py-24 md:py-32"
      >
        <div
          class={cn(
            "mx-auto flex w-full max-w-screen-lg flex-col gap-12",
            event.data.afterEventContent.afterMovie && "max-w-screen-xl",
          )}
        >
          <div class="text-center">
            <h2 class="font-heading text-2xl font-medium uppercase tracking-widest text-white md:text-3xl">
              After Event Insights
            </h2>
            <p class="text-balance text-base tracking-wide opacity-60">
              Key moments of the event
            </p>
          </div>

          <div class="flex flex-1 flex-col justify-center gap-4 md:flex-row">
            {event.data.afterEventContent.afterMovie && (
              <div class="relative aspect-[1134/640] w-full min-w-0 flex-1">
                <a
                  href={event.data.afterEventContent.afterMovie.href}
                  target="_blank"
                >
                  <Image
                    alt={event.data.afterEventContent.afterMovie.thumbnail.alt}
                    class="rounded-lg object-cover"
                    src={
                      event.data.afterEventContent.afterMovie.thumbnail.image
                    }
                    width={1134}
                    height={640}
                  />
                </a>
              </div>
            )}

            <div
              class={cn("flex flex-[0.7] flex-col gap-4 md:max-w-screen-sm")}
            >
              {!!event.data.afterEventContent.photos.sources?.length && (
                <div
                  class={cn(
                    "grid aspect-[640/426] gap-4",
                    (event.data.afterEventContent.photos.sources?.length ?? 0) >
                      1 && "grid-cols-2",
                  )}
                >
                  {event.data.afterEventContent.photos.sources?.map(
                    (item, index) =>
                      !item ? null : event.data.afterEventContent?.photos
                          .href ? (
                        <a
                          class={cn(
                            "relative flex h-full overflow-hidden rounded-md",
                            (event.data.afterEventContent?.photos.sources
                              ?.length ?? 0) === 3 &&
                              index === 1 &&
                              "row-span-2",
                          )}
                          href={event.data.afterEventContent.photos.href}
                        >
                          <Image
                            class="absolute inset-0 h-full w-full max-w-none bg-white/5 object-cover"
                            src={item.image}
                            alt={item.alt}
                            width={800}
                          />
                        </a>
                      ) : (
                        <div
                          class={cn(
                            "relative overflow-hidden rounded-md",
                            (event.data.afterEventContent?.photos.sources
                              ?.length ?? 0) === 3 &&
                              index === 1 &&
                              "row-span-2",
                          )}
                        >
                          <Image
                            class="absolute inset-0 h-full w-full max-w-none bg-white/5 object-cover"
                            src={item.image}
                            alt={item.alt}
                            width={800}
                          />
                        </div>
                      ),
                  )}
                </div>
              )}

              <div
                class={cn(
                  "flex flex-col justify-center gap-4 sm:flex-row",
                  event.data.afterEventContent.afterMovie && "md:justify-start",
                )}
              >
                {event.data.afterEventContent.photos.href && (
                  <a
                    href={event.data.afterEventContent.photos.href}
                    class={cn(
                      buttonVariants({ size: "lg" }),
                      "group gap-2 sm:max-w-48 md:flex-1",
                    )}
                  >
                    Event Photos
                    <MdArrowForward className="transition group-hover:translate-x-1" />
                  </a>
                )}
                {event.data.afterEventContent.vods?.href && (
                  <a
                    href={event.data.afterEventContent.vods.href}
                    class={cn(
                      buttonVariants({ size: "lg" }),
                      "group gap-2 sm:max-w-48 md:flex-1",
                    )}
                  >
                    All VODs
                    <MdArrowForward className="transition group-hover:translate-x-1" />
                  </a>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    )
  }

  <!-- Venue -->
  {
    event.data.location && (
      <article
        id="venue"
        class="relative mx-auto flex w-full max-w-screen-2xl scroll-m-8 flex-col gap-8 py-8 md:flex-row md:gap-4 md:py-24"
      >
        {event.data.location.image && (
          <div class="flex-1 md:-ml-4">
            <Image
              class="bg-black/20 md:rounded-sm"
              src={event.data.location.image}
              alt={event.data.location.name}
            />
          </div>
        )}
        <div class="flex flex-1 flex-col items-center justify-center px-4 md:px-12">
          <Prose>
            <div class="not-prose flex flex-col gap-3">
              <h2 class="font-heading text-2xl font-medium uppercase tracking-widest text-white">
                Venue
              </h2>
              <a
                class="group flex gap-2 text-white"
                href={`https://www.google.com/maps/search/${event.data.location.name},${event.data.location.address}`}
              >
                <MdLocationPin className="size-5 transition opacity-40 group-hover:opacity-100" />
                <address class="not-italic leading-tight">
                  <strong class="transition group-hover:text-primary">
                    {event.data.location.name}
                  </strong>
                  <br />
                  {event.data.location.address}
                </address>
              </a>
              <div class="flex gap-2">
                <MdEvent className="size-5 opacity-40" />
                <p class="text-sm">{getEventDisplayDate(event)}</p>
              </div>
            </div>
            {!!event.data.postponed && event.data.status !== "cancelled" && (
              <EventMessage
                type={
                  event.data.status === "published-without-date"
                    ? "postponed-without-date"
                    : "postponed-with-date"
                }
                originalDate={event.data.postponed.originalDate}
              />
            )}

            <Content />
          </Prose>
        </div>
      </article>
    )
  }

  <!-- CFP -->
  {
    shouldShowCFP(event) && (
      <div class="relative flex w-full flex-col gap-6 px-6 py-12">
        <a
          href={event.data.cfp.href}
          target="_blank"
          rel="noreferer"
          class="group mx-auto flex w-full max-w-screen-md flex-col items-start gap-6 rounded-lg bg-white/5 p-8 backdrop-blur-md transition hover:bg-white/10 md:flex-row md:items-center md:px-12 md:py-10"
        >
          <div class="flex flex-1 flex-col">
            <h2 class="text-balance font-heading text-xl font-medium uppercase tracking-widest transition group-hover:text-primary">
              Submit your talk
            </h2>
            <p class="text-balance text-base tracking-wide opacity-60">
              Propose your subject, we accept speakers of all levels.
            </p>
          </div>

          <div
            class={cn(
              buttonVariants({ size: "lg", variant: "secondary" }),
              "max-xs:w-full",
            )}
          >
            Call for Paper
          </div>
        </a>
      </div>
    )
  }

  <!-- Schedule & Speakers -->
  <div
    class={cn(
      "relative mx-auto flex w-full max-w-screen-sm flex-col gap-24 px-4 py-16 lg:max-w-screen-lg lg:flex-row lg:gap-12",
      !speakers.length && "lg:max-w-screen-sm",
    )}
  >
    <div class="flex w-full flex-[1.3] flex-col gap-8 pb-4">
      <div class="flex items-center gap-2">
        <h2
          id="schedule"
          class="scroll-mt-32 font-heading text-2xl font-medium uppercase tracking-widest"
        >
          Schedule
        </h2>
        {
          event.data.schedule && (
            <a href={`${event.id}/schedule`} title="Dedicated schedule page">
              <MdArrowOutward className="text-2xl transition group-hover:-translate-y-0.5 group-hover:translate-x-0.5" />
            </a>
          )
        }
      </div>
      <Schedule event={event} displayStats />
    </div>

    {
      !!speakers.length && (
        <div class="flex w-full flex-1 flex-col gap-8">
          <h2
            id="speakers"
            class="scroll-mt-32 font-heading text-2xl font-medium uppercase tracking-widest"
          >
            Speakers
          </h2>
          <div class="grid grid-cols-2 gap-x-4 gap-y-6 xs:grid-cols-3 sm:grid-cols-4 md:grid-cols-3">
            {speakers.map((speaker) => (
              <People people={speaker} />
            ))}
          </div>
        </div>
      )
    }
  </div>

  {event.data.feedback && <FeedbackCTA href={event.data.feedback.link} />}

  {
    !!sponsors.length && (
      <div class="relative mx-auto flex w-full max-w-screen-lg flex-col gap-8 px-4 py-12 md:py-24">
        <h2
          id="sponsors"
          class="scroll-mt-32 font-heading text-2xl font-medium uppercase tracking-widest"
        >
          Sponsors
        </h2>
        <Sponsors event={event} sponsors={sponsors} />
      </div>
    )
  }

  <!-- Prospectus -->
  {
    shouldShowProspectus(event) && (
      <div class="relative flex w-full flex-col gap-6 px-6 py-12">
        <a
          href={event.data.prospectus.href}
          target="_blank"
          rel="noreferer"
          class="group mx-auto flex w-full max-w-screen-md flex-col items-start gap-6 rounded-lg bg-white/5 p-8 backdrop-blur-md transition hover:bg-white/10 md:flex-row md:items-center md:px-12 md:py-10"
        >
          <div class="flex flex-1 flex-col">
            <h2 class="text-balance font-heading text-xl font-medium uppercase tracking-widest transition group-hover:text-primary">
              Want to support the event?
            </h2>
            <p class="text-balance text-base tracking-wide opacity-60">
              Support the community and make your company shine
            </p>
          </div>

          <div class={cn(buttonVariants({ size: "lg" }), "max-xs:w-full")}>
            Become a Sponsor
          </div>
        </a>
      </div>
    )
  }

  {event.data.faq && <FAQ client:load faq={event.data.faq} />}

  {!!partners.length && <PartnersBlock partners={partners} />}

  <div class="relative flex w-full flex-col gap-6 px-6 py-12">
    <a
      href={`/events/${event.id}/assets`}
      rel="nofollow"
      class="group mx-auto flex w-full max-w-screen-md flex-col items-start gap-6 rounded-lg bg-white/5 p-8 backdrop-blur-md transition hover:bg-white/10 sm:flex-row sm:items-center sm:px-8 sm:py-6"
    >
      <div class="flex flex-1 flex-col">
        <h2
          class="text-balance font-heading text-base font-medium uppercase tracking-widest transition duration-500 group-hover:text-primary"
        >
          Need visual assets?
        </h2>
      </div>

      <div class="relative h-32 w-56 max-xs:mx-auto sm:-mt-24 sm:h-4 sm:w-64">
        <Image
          class="absolute -left-4 top-0 max-w-none -rotate-[4deg] rounded bg-background shadow-xl transition duration-500 group-hover:scale-105"
          src={`/events/${event.id}/assets/tickets-available-square.jpg`}
          alt=""
          width={108}
          height={108}
        />
        <Image
          class="absolute left-12 top-4 max-w-none rotate-[4deg] rounded bg-background shadow-xl transition duration-500 group-hover:scale-105"
          src={`/events/${event.id}/assets/save-the-date.jpg`}
          alt=""
          width={192}
          height={108}
        />
      </div>

      <div
        class={cn(
          buttonVariants({ size: "lg", variant: "secondary" }),
          "max-xs:w-full",
        )}
      >
        View Event Assets
      </div>
    </a>
  </div>

  <div class="py-8 md:py-12">
    <JoinTheCommunity />
  </div>
</EventLayout>
