---
import MainPageTitle from "@/components/MainPageTitle/index.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import bgImage from "@/assets/images/events.jpeg";
import {
  getPastEvents,
  getUpcomingEvents,
  getEventsCollection,
} from "@/lib/events";
import SEO from "@/components/SEO/index.astro";
import EventsGrid from "@/components/EventsGrid/index.astro";
import EventsList from "@/components/EventsList/index.astro";
import { getCollection } from "astro:content";
import { lunalink } from "@bearstudio/lunalink";
import { ROUTES } from "@/routes.gen";
import dayjs from "dayjs";

const upcomingEvents = await getUpcomingEvents();
const pastEvents = await getPastEvents();
const allCountries = await getCollection("countries");
const events = await getEventsCollection({ without: ["draft"] });

const countriesLastEvents = allCountries.map((country) => {
  const lastEvents = events.find(
    (event) => event.data._computed.country?.id === country.id,
  );

  return {
    ...country,
    lastDate: dayjs(lastEvents?.data.date),
  };
});

const countries = countriesLastEvents.sort((a, b) =>
  b.lastDate.diff(a.lastDate),
);
---

<MainLayout>
  <SEO
    slot="seo"
    title="Events"
    description="All the Fork it! events, from meetups to full day events, come take a look at what is happening near you."
  />
  <MainPageTitle
    title="Events"
    subtitle="All the Fork it! tech events"
    imageSrc={bgImage}
  />

  <div class="flex flex-col gap-16 pb-40">
    {
      !!upcomingEvents.length && (
        <div class="mx-auto w-full max-w-screen-lg px-4">
          <EventsGrid events={upcomingEvents} title="Upcoming events" />
        </div>
      )
    }
    <div
      class="mx-auto flex w-full max-w-screen-lg flex-col gap-16 px-4 md:flex-row-reverse"
    >
      <div class="flex w-full flex-1 flex-col gap-4">
        <h2
          class="font-heading text-sm font-medium uppercase tracking-widest opacity-60"
        >
          Events by Country
        </h2>
        <div class="flex flex-col">
          {
            countries.map((country) => (
              <a
                href={lunalink(ROUTES.events.locations[":countryId"].__path, {
                  countryId: country.id,
                })}
                class="border-b border-white/10 px-5 py-3 transition duration-500 first:border-t hover:bg-white/5"
              >
                {country.data.name}
              </a>
            ))
          }
        </div>
      </div>
      <EventsList events={pastEvents} title="Past Events" class="flex-[2]" />
    </div>
  </div>
</MainLayout>
