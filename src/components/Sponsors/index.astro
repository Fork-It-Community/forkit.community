---
import SponsorCard from "@/components/Sponsors/SponsorCard.astro";
import TiltedCard from "@/components/TiltedCard";
import { cn } from "@/lib/utils-client";
import type { CollectionEntry } from "astro:content";

interface Props {
  event: CollectionEntry<"events">;
  sponsors: Array<CollectionEntry<"partners">>;
}

const { event, sponsors } = Astro.props;
---

<div class="flex flex-col gap-12">
  {
    event.data.sponsoringLevels?.map(
      (sponsoringLevel, sponsoringLevelIndex) => {
        const levelSponsors = event.data.sponsors
          ?.filter((s) => s.level === sponsoringLevel)
          .map(({ slug }) => sponsors.find((s) => s.id === slug.id))
          .filter((s) => !!s);

        if (!levelSponsors?.length) return null;

        const priority =
          sponsoringLevelIndex === 0
            ? "primary"
            : sponsoringLevelIndex === 1
              ? "secondary"
              : ("default" as const);

        return (
          <div class="flex flex-col gap-2">
            <h3 class="font-heading text-base font-medium uppercase tracking-widest">
              {sponsoringLevel}
            </h3>
            <div
              class={cn(
                "grid grid-cols-2 gap-2 md:grid-cols-4 md:gap-4",
                priority === "secondary" &&
                  "grid-cols-1 sm:grid-cols-2 md:grid-cols-3",
                priority === "primary" && "grid-cols-1 md:grid-cols-2",
              )}
            >
              {levelSponsors.map((sponsor) => (
                <TiltedCard client:visible>
                  <SponsorCard sponsor={sponsor} priority={priority} />
                </TiltedCard>
              ))}
            </div>
          </div>
        );
      },
    )
  }
</div>
