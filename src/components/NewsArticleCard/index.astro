---
import { LogoIcon } from "@/components/LogoIcon";
import { buttonVariants } from "@/components/ui/button";
import { cn, formatDateTime } from "@/lib/utils";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntries } from "astro:content";
import { MdArrowForward } from "react-icons/md";

interface Props {
  newsItem: CollectionEntry<"news">;
}
const { newsItem } = Astro.props;

const authors = (await getEntries(newsItem.data.authors ?? []))
  .filter((p) => !!p)
  .sort((a, b) => a.data.name.localeCompare(b.data.name));
---

<article
  class="group relative flex w-full flex-[1.2] flex-col overflow-hidden rounded-lg bg-white/5"
>
  {
    !!newsItem.data.featuredImage && (
      <div
        class="relative bg-black transition duration-500 group-hover:scale-105"
        style={{
          maskImage: "linear-gradient(180deg, black 50%, transparent 100%)",
        }}
      >
        <div class="absolute inset-0 w-full bg-gradient-to-b from-black/30 to-black" />
        <a href="#">
          <Image
            src={newsItem.data.featuredImage}
            alt={newsItem.data.title}
            width={600}
            height={400}
            class="aspect-video w-full object-cover"
          />
        </a>
      </div>
    )
  }
  <div
    class={cn(
      "relative flex-1 flex flex-col gap-4 p-6",
      newsItem.data.featuredImage && "-mt-48 pt-24",
    )}
  >
    <time datetime="2020-03-16" class="-mb-2 text-xs uppercase opacity-60">
      {formatDateTime(newsItem.data.date)}
    </time>
    <h2
      class="line-clamp-3 text-balance font-heading text-xl font-medium tracking-wide transition duration-500 group-hover:text-primary sm:text-2xl"
    >
      <a href="#">
        {newsItem.data.title}
        <div class="absolute inset-0 z-10"></div>
      </a>
    </h2>
    <p
      class="text-sm/6 opacity-60 transition duration-500 group-hover:opacity-80"
    >
      {newsItem.data.description}
    </p>

    <div class="flex items-center">
      {
        newsItem.data.authors ? (
          authors.map((author) => (
            <a
              href="#author"
              class="group/author relative z-20 flex items-center gap-x-2.5 text-sm font-medium"
            >
              <img
                src={author.data.avatar?.src}
                alt={author.data.name}
                class="size-6 flex-none rounded-full bg-black"
              />
              <span class="opacity-60 transition group-hover/author:opacity-100">
                {author.data.name}
              </span>
            </a>
          ))
        ) : (
          <div class="relative z-20 flex items-center gap-x-2.5 text-sm font-medium">
            <div class="flex size-6 items-center justify-center rounded-full bg-black text-primary">
              <LogoIcon className="size-3" />
            </div>
            <span class="opacity-60">Fork It! Team</span>
          </div>
        )
      }
      <a
        href="#"
        class={cn(
          buttonVariants({ variant: "secondary", size: "sm" }),
          "relative z-20 ml-auto gap-2",
        )}
      >
        Continue Reading
        <MdArrowForward />
      </a>
    </div>
  </div>
</article>
