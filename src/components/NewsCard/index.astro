---
import { LogoIcon } from "@/components/LogoIcon";
import { buttonVariants } from "@/components/ui/button";
import { cn, formatDateTime } from "@/lib/utils";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { render } from "astro:content";
import { getEntries } from "astro:content";
import { MdArrowForward } from "react-icons/md";

interface Props {
  newsItem: CollectionEntry<"news">;
}
const { newsItem } = Astro.props;
const { Content } = await render(newsItem);

const authors = (await getEntries(newsItem.data.authors ?? []))
  .filter((p) => !!p)
  .sort((a, b) => a.data.name.localeCompare(b.data.name));
---

<article
  class="news-article-card group relative flex w-full flex-1 flex-col overflow-hidden rounded-lg bg-white/5 backdrop-blur-md transition duration-500 hover:bg-white/10"
>
  {
    !!newsItem.data.featuredImage && (
      <div
        class="relative flex-1 bg-black transition duration-500 group-hover:scale-105"
        style={{
          maskImage: "linear-gradient(180deg, black 50%, transparent 100%)",
        }}
      >
        <div class="pointer-events-none absolute inset-0 w-full bg-gradient-to-b from-black/30 to-black" />
        <a href={`/news/article/${newsItem.id}`} class="flex h-full w-full">
          <Image
            src={newsItem.data.featuredImage}
            alt={newsItem.data.title}
            width={600}
            height={400}
            class="aspect-video w-full object-cover"
          />
        </a>
      </div>
    )
  }
  <div
    class={cn(
      "relative flex-1 flex flex-col gap-1 p-6",
      newsItem.data.featuredImage && "-mt-48",
    )}
  >
    <div class="flex flex-wrap gap-1 text-xs uppercase opacity-60">
      <time datetime="2020-03-16">
        {formatDateTime(newsItem.data.date)}
      </time>
    </div>
    <h2
      class="line-clamp-3 text-balance font-heading text-xl font-medium tracking-wide transition duration-500 group-hover:text-primary"
    >
      <a href={`/news/article/${newsItem.id}`}>
        {newsItem.data.title}
        <div class="absolute inset-0 z-10"></div>
      </a>
    </h2>
    <div
      class={cn(
        "prose prose-sm prose-invert line-clamp-4 opacity-80",
        !!newsItem.data.featuredImage && "line-clamp-1",
      )}
    >
      {newsItem.data.excerpt ? <p>{newsItem.data.excerpt}</p> : <Content />}
    </div>

    <div class="mt-auto flex items-center pt-2">
      {
        newsItem.data.authors ? (
          <div class="flex gap-3">
            {authors.map((author) => (
              <a
                href={`/people#${author.id}`}
                class={cn(
                  "group/author relative z-20 flex items-center gap-x-2.5 text-sm font-medium",
                  authors.length > 1 && "-mr-4",
                )}
              >
                <img
                  src={author.data.avatar?.src}
                  alt={author.data.name}
                  class="size-6 flex-none rounded-full bg-black"
                />

                <span
                  class={cn(
                    "opacity-60 transition group-hover/author:opacity-100",
                    authors.length > 1 && "sr-only",
                  )}
                >
                  {author.data.name}
                </span>
              </a>
            ))}
          </div>
        ) : (
          <div class="relative z-20 flex items-center gap-x-2.5 text-sm font-medium">
            <div class="flex size-6 items-center justify-center rounded-full bg-black text-primary">
              <LogoIcon className="size-3" />
            </div>
            <span class="opacity-60">Fork It! Team</span>
          </div>
        )
      }
      <a
        href={`/news/article/${newsItem.id}`}
        class={cn(
          buttonVariants({ variant: "secondary", size: "sm" }),
          "relative z-20 ml-auto gap-2",
        )}
      >
        <span class="max-xs:sr-only">Continue Reading</span>
        <MdArrowForward />
      </a>
    </div>
  </div>
</article>
