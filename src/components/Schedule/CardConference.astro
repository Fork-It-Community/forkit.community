---
import { type CollectionEntry, getEntries, getEntry } from "astro:content";
import { IoLanguageSharp } from "react-icons/io5";
import SpeakerForCard from "./SpeakerForCard.astro";

interface Props {
  activity: NonNullable<CollectionEntry<"events">["data"]["schedule"]>[number];
  event: CollectionEntry<"events">;
}

const { activity, event } = Astro.props;

const talk = activity.slug ? await getEntry(activity.slug) : undefined;
const hosts = await getEntries(talk?.data.hosts ?? []);
const speakers = (
  await getEntries(talk?.data.speakers.map((speaker) => speaker.id) ?? [])
).map((speaker) => ({
  ...speaker,
  data: {
    ...speaker.data,
    role: talk?.data.speakers.find((s) => s.id.id === speaker.id)?.role,
  },
}));
const people = [...hosts, ...speakers];
---

{
  talk && (
    <a
      href={`/events/${event.id}/talks/${talk.id}`}
      class="group flex w-full flex-col gap-4 rounded-lg bg-white/5 p-4 backdrop-blur-md transition hover:bg-white/10 sm:px-6 sm:py-5"
    >
      <p class="text-balance font-heading text-base font-medium leading-tight tracking-wider text-white transition group-hover:text-primary">
        {talk.data.title}
      </p>
      {!!people.length && (
        <div class="grid grid-cols-2 gap-3 md:grid-cols-3">
          {speakers.map((speaker) => (
            <SpeakerForCard
              name={speaker.data.name}
              avatar={speaker.data.avatar ?? null}
              role={speaker.data.role ?? ""}
            />
          ))}
        </div>
      )}

      <div>
        <span class="flex w-fit items-center gap-1.5 rounded-full border border-black/60 bg-black/40 px-2 py-0.5 text-2xs font-bold uppercase leading-none opacity-60 transition group-hover:opacity-100">
          <IoLanguageSharp className="text-base" />
          <span>Talk in {talk.data.language}</span>
        </span>
      </div>
    </a>
  )
}
