---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntries } from "astro:content";
import personPlaceholder from "@/assets/images/people-placeholder.jpeg";
import dayjs from "dayjs";
import { IoLanguageSharp } from "react-icons/io5";

interface Props {
  episode: CollectionEntry<"episodes">;
}

const { episode } = Astro.props;

const hosts = (await getEntries(episode.data.hosts ?? []))
  .filter((p) => !!p)
  .sort((a, b) => a.data.name.localeCompare(b.data.name));
const guests = (await getEntries(episode.data.guests ?? []))
  .filter((p) => !!p)
  .sort((a, b) => a.data.name.localeCompare(b.data.name));

const people = [...hosts, ...guests];
---

<a
  href={`/podcasts/${episode.id}`}
  class="group relative z-10 flex flex-col gap-4 overflow-hidden rounded-lg bg-white/5 p-4 backdrop-blur-md transition duration-500 hover:bg-white/10"
>
  <div class="flex gap-4 max-xs:flex-col">
    <div>
      <Image
        src={episode.data.cover}
        alt={episode.data.title}
        class="rounded-md border-2 border-black/20 xs:size-48"
        width={700}
        height={700}
      />
    </div>
    <div class="flex flex-1 flex-col gap-4">
      <div class="flex flex-1 flex-col gap-1">
        <div
          class="flex items-start gap-2 max-sm:flex-col sm:items-center sm:justify-between"
        >
          <div
            class="flex w-fit items-center gap-1.5 rounded-full border border-black/60 bg-black/40 px-2 py-0.5 text-2xs font-bold uppercase leading-none opacity-60 transition group-hover:opacity-100"
          >
            <IoLanguageSharp className="text-base" />
            <span>Episode in {episode.data.language}</span>
          </div>
          <div class="text-2xs uppercase tracking-widest opacity-60">
            {dayjs(episode.data.releaseDate).format("MMMM D, YYYY")}
          </div>
        </div>
        <div
          class="font-heading font-medium transition group-hover:text-primary"
        >
          {episode.data.title}
        </div>
        {
          episode.data.description && (
            <div class="line-clamp-3 text-xs opacity-60">
              {episode.data.description}
            </div>
          )
        }
      </div>
      <div class="flex flex-col gap-3">
        {
          episode.data.tags && (
            <div class="flex flex-wrap gap-2">
              {episode.data.tags.map((tag) => (
                <div class="rounded-sm text-xs uppercase opacity-60">
                  #{tag}
                </div>
              ))}
            </div>
          )
        }
        <div class="flex -space-x-4">
          {
            people.map((person) => (
              <Image
                class="aspect-square rounded-full border-2 border-background"
                src={person.data.avatar ?? personPlaceholder}
                alt={person.data.name}
                width={40}
              />
            ))
          }
        </div>
      </div>
    </div>
  </div>
</a>
