---
import TiltedCard from "@/components/TiltedCard";
import EventCard from "@/components/EventCard/index.astro";
import { cn } from "@/lib/utils-client";
import type { CollectionEntry } from "astro:content";
import { getSocialsItems } from "@/content/socials";

interface Props {
  events: Array<CollectionEntry<"events">>;
  title?: string;
  class?: string;
}

const { events, title, class: className } = Astro.props;
---

<div class={cn("flex flex-col gap-4", className)}>
  {
    !!title && (
      <h2 class="font-heading text-sm font-medium uppercase tracking-widest opacity-60">
        {title}
      </h2>
    )
  }
  <div class={cn("grid grid-cols-1 gap-3 md:grid-cols-2")}>
    {
      events.map((event) => (
        <TiltedCard client:visible>
          <EventCard
            event={event}
            class={cn(event.data.status !== "cancelled" && "min-h-56")}
          />
        </TiltedCard>
      ))
    }
    {
      events.length % 2 !== 0 && (
        <div class="relative hidden flex-col items-center justify-center gap-4 rounded-md bg-white/5 px-8 py-6 tracking-widest md:flex">
          <div class="font-heading text-sm font-medium uppercase tracking-widest opacity-60">
            Keep updated
          </div>
          <div class="flex flex-wrap items-center justify-center gap-x-3 gap-y-0">
            {getSocialsItems("primary").map(({ icon: Icon, ...social }) => (
              <a
                href={social.href}
                class="flex items-center gap-2 p-2 opacity-60 transition hover:text-white hover:opacity-100"
              >
                <span class="text-lg">
                  <Icon />
                </span>
                <span class="text-sm uppercase tracking-wide">
                  {social.label}
                </span>
              </a>
            ))}
          </div>
        </div>
      )
    }
  </div>
</div>
